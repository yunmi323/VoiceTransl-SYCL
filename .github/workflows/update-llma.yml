name: Manual Build and Upload

on:
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: windows-latest

    steps:
      # 1. 克隆 https://github.com/shinnpuru/VoiceTransl.git main 分支
      - name: Checkout VoiceTransl repository
        uses: actions/checkout@v3
        with:
          repository: shinnpuru/VoiceTransl
          ref: main

      # 2. 删除 llma 文件夹
      - name: Delete llma folder
        shell: pwsh
        run: |
          if (Test-Path -Path "llma") {
            try {
              Remove-Item -Path "llma" -Recurse -Force -ErrorAction Stop
              Write-Host "Successfully deleted the llma folder."
            } catch {
              Write-Error "Failed to delete the llma folder: $_"
              throw
            }
          } else {
            Write-Host "The llma folder does not exist."
          }

      # 3. 下载最新的包含 llama-【release tag】-bin-win-sycl-x64.zip 的 release 并解压重命名为 llma
      - name: Download and extract llama zip
        shell: pwsh
        run: |
          $releases = Invoke-RestMethod -Uri "https://api.github.com/repos/ggerganov/llama.cpp/releases"
          $found = $false
          foreach ($release in $releases) {
            $tag = $release.tag_name
            $assets = $release.assets
            foreach ($asset in $assets) {
              if ($asset.name -like "llama-$tag-bin-win-sycl-x64.zip") {
                $zipUrl = $asset.browser_download_url
                Invoke-WebRequest -Uri $zipUrl -OutFile "llama-$tag-bin-win-sycl-x64.zip"
                Expand-Archive -Path "llama-$tag-bin-win-sycl-x64.zip" -DestinationPath "./llma"
                Remove-Item -Path "llama-$tag-bin-win-sycl-x64.zip"
                $found = $true
                break
              }
            }
            if ($found) {
              break
            }
          }
          if (-not $found) {
            throw "Could not find a release with llama-【release tag】-bin-win-sycl-x64.zip"
          }

      # 4. 安装 Python 依赖然后应用 pyinstaller app.spec 构建项目
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build project with PyInstaller
        run: pyinstaller app.spec

      # 5. 将构建好的项目打包成 ZIP 文件
      - name: Package built project into ZIP
        shell: pwsh
        run: |
          Compress-Archive -Path dist\* -DestinationPath dist\built-project.zip

      # 6. 上传 ZIP 格式的构建项目
      - name: Upload built project as ZIP
        uses: actions/upload-artifact@v4
        with:
          name: built-project
          path: dist/built-project.zip
